version: "3"
networks:
  appnetwork:
    name: appnetwork
    driver: bridge
services:
  mysql_server:
    image: mysql/mysql-server:8.0.32
    container_name: mysql_server
    restart: always
    command: --lower_case_table_names=1
    networks:
      - appnetwork
    expose:
      - "3306"

    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=12345678
      - MYSQL_DATABASE=FITFOOD
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - "./fitfood.sql:/docker-entrypoint-initdb.d/init.sql"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 3s
      timeout: 60s
      retries: 10
  redis_server:
    image: redis:7.0-alpine
    container_name: redis_server
    networks:
      - appnetwork
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 3s
      timeout: 60s
      retries: 10
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: server
    environment:
      - PORT_REDIS=6379
      - HOST_REDIS=redis_server
      - HOST_MYSQL=mysql_server
      - WHITE_LIST=http://localhost:3004, http://localhost:3001
    networks:
      - appnetwork
    volumes:
      - ./server/.:/app
      - /app/node_modules
    ports:
      - "3005:3001"
    command: "yarn start"
    healthcheck:
      test: ["CMD", "curl", "http://localhost:3001/health"]
      interval: 3s
      timeout: 60s
      retries: 10
    depends_on:
      redis_server:
        condition: service_healthy
      mysql_server:
        condition: service_healthy
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: client
    volumes:
      - ./client/.:/app
      - /app/node_modules
    networks:
      - appnetwork
    ports:
      - "3004:80"
    depends_on:
      server:
        condition: service_healthy
    command: yarn start
