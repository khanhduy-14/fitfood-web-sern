version: "3"
networks:
  appnetwork:
    name: appnetwork
    driver: bridge
services:
  mysql_server:
    image: mysql/mysql-server:8.0.32
    container_name: mysql_server
    restart: always
    command: --lower_case_table_names=1
    networks:
      - appnetwork
    expose:
      - "3306"

    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=testuser
      - MYSQL_PASSWORD=12345678
      - MYSQL_DATABASE=FITFOOD
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - "./fitfood.sql:/docker-entrypoint-initdb.d/init.sql"
  redis_server:
    image: redis:7.0-alpine
    container_name: redis_server
    networks:
      - appnetwork
    restart: always
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.prod
    container_name: server
    environment:
      - PORT_REDIS=6379
      - HOST_REDIS=redis_server
      - HOST_MYSQL=mysql_server
      - WHITE_LIST=http://localhost:3004
    networks:
      - appnetwork
    volumes:
      - ./wait-for-it.sh:/app/wait-for-it.sh
    ports:
      - "3005:3001"
    command: sh -c "/app/wait-for-it.sh -t 0 redis_server:6379 &&
      /app/wait-for-it.sh -t 0 mysql_server:3306 &&
      yarn start"
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.prod
    container_name: client
    volumes:
      - ./wait-for-it.sh:/app/wait-for-it.sh
    networks:
      - appnetwork
    ports:
      - "3004:80"
    command: sh -c "/app/wait-for-it.sh -t 0 server:3001 &&
      nginx -g 'daemon off;'"
